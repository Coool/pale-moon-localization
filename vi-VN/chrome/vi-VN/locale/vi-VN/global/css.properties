#X-Generator: crowdin.com
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

MimeNotCss=Stylesheet %1$S kh\u00f4ng t\u1ea3i \u0111\u01b0\u1ee3c v\u00ec ki\u1ec3u MIME c\u1ee7a n\u00f3, "%2$S", kh\u00f4ng ph\u1ea3i l\u00e0 "text/css".
MimeNotCssWarn=Stylesheet %1$S v\u1eabn t\u1ea3i \u0111\u01b0\u1ee3c \u1edf d\u1ea1ng CSS m\u1eb7c d\u00f9 ki\u1ec3u MIME, "%2$S", kh\u00f4ng ph\u1ea3i l\u00e0 "text/css".

PEUnexpEOF2=\u0110\u1ed9t ng\u1ed9t k\u1ebft th\u00fac t\u1eadp tin khi \u0111ang t\u00ecm %1$S.
PEParseRuleWSOnly=Chu\u1ed7i Whitespace-only \u0111\u00e3 cho \u0111\u01b0\u1ee3c ph\u00e2n t\u00edch theo qui t\u1eafc.
PEDeclDropped=Khai b\u00e1o b\u1ecb b\u1ecf.
PEDeclSkipped=Nh\u1ea3y sang khai b\u00e1o k\u1ebf ti\u1ebfp.
PEUnknownProperty=Kh\u00f4ng r\u00f5 thu\u1ed9c t\u00ednh '%1$S'.
PEValueParsingError=L\u1ed7i trong khi ph\u00e2n t\u00edch gi\u00e1 tr\u1ecb cho '%1$S'.
PEExpectEndValue=Mong \u0111\u1ee3i k\u1ebft th\u00fac gi\u00e1 tr\u1ecb nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PERuleTrailing=Expected end of rule but found '%1$S'.
PESkipAtRuleEOF2=end of at-rule
PEUnknownAtRule=Kh\u00f4ng nh\u1eadn d\u1ea1ng at-rule ho\u1eb7c l\u1ed7i ph\u00e2n t\u00edch at-rule '%1$S'.
PECharsetRuleEOF=b\u1ea3ng m\u00e3 chu\u1ed7i trong @charset rule
PECharsetRuleNotString=C\u1ea7n b\u1ea3ng m\u00e3 chu\u1ed7i nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEGatherMediaEOF=k\u1ebft th\u00fac danh s\u00e1ch media trong @import ho\u1eb7c @media rule
PEGatherMediaNotComma=C\u1ea7n ',' trong danh s\u00e1ch media nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEGatherMediaNotIdent=C\u1ea7n \u0111\u1ecbnh danh trong danh s\u00e1ch media nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEGatherMediaReservedMediaType=Found reserved keyword '%1$S' when looking for media type.
PEParseSourceSizeListEOF=length value for matched media condition
PEParseSourceSizeListNotComma=Expected ',' after value but found '%1$S'
PEImportNotURI=C\u1ea7n URI trong @import rule nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEImportBadURI=URI kh\u00f4ng h\u1ee3p l\u1ec7 trong quy t\u1eafc @import\: '%1$S'.
PEImportUnexpected=T\u00ecm th\u1ea5y '%1$S' kh\u00f4ng c\u1ea7n thi\u1ebft trong @import.
PEGroupRuleEOF2=K\u1ebft th\u00fac c\u1ee7a @media, @supports ho\u1eb7c @-moz-document
PEGroupRuleNestedAtRule=Quy t\u1eafc %1$S kh\u00f4ng \u0111\u01b0\u1ee3c cho ph\u00e9p trong quy t\u1eafc @media ho\u1eb7c @-moz-document.
PEMozDocRuleBadFunc2=Expected url(), url-prefix(), domain() or regexp() in @-moz-document rule but found '%1$S'.
PEMozDocRuleNotURI=C\u1ea7n URI trong quy t\u1eafc @-moz-document nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEMozDocRuleNotString=Mong \u0111\u1ee3i chu\u1ed7i trong quy t\u1eafc @-moz-document h\u00e0m regexp() nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEMozDocRuleEOF=URI ti\u1ebfp theo trong @-moz-document rule
PEAtNSPrefixEOF=ti\u1ec1n t\u1ed1 namespace trong @namespace rule
PEAtNSURIEOF=namespace URI trong @namespace rule
PEAtNSUnexpected=D\u1ea5u th\u1eeba b\u00ean trong @namespace\: '%1$S'.
PEKeyframeNameEOF=t\u00ean c\u1ee7a quy t\u1eafc @keyframes.
PEKeyframeBadName=C\u1ea7n \u0111\u1ecbnh danh cho t\u00ean c\u1ee7a quy t\u1eafc @keyframes.
PEKeyframeBrace=C\u1ea7n d\u1ea5u m\u1edf { c\u1ee7a quy t\u1eafc @keyframes.
PESkipDeclBraceEOF=d\u1ea5u \u0111\u00f3ng } c\u1ee7a kh\u1ed1i khai b\u00e1o
PESkipRSBraceEOF=d\u1ea5u \u0111\u00f3ng } c\u1ee7a rule set kh\u00f4ng \u0111\u00fang
PEBadSelectorRSIgnored=Ruleset b\u1ecb b\u1ecf qua do selector t\u1ed3i.
PEBadSelectorKeyframeRuleIgnored=Quy t\u1eafc keyframe b\u1ecb b\u1ecf qua do selector t\u1ed3i.
PESelectorListExtraEOF=',' ho\u1eb7c '{'
PESelectorListExtra=C\u1ea7n ',' ho\u1eb7c '{' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PESelectorGroupNoSelector=C\u1ea7n Selector.
PESelectorGroupExtraCombinator=K\u1ebft h\u1ee3p Dangling
PECounterStyleNotIdent=Expected identifier for name of @counter-style rule.
PECounterStyleBadName=Name of @counter-style rule can't be '%1$S'.
PECounterStyleBadBlockStart=Expected '{' to begin @counter-style rule but found '%1$S'.
PECounterStyleEOF=closing '}' of @counter-style block
PECounterDescExpected=Expected counter descriptor but found '%1$S'.
PEUnknownCounterDesc=Unknown descriptor '%1$S' in @counter-style rule.
PECounterExtendsNotIdent=Expected identifier for extends system but found '%1$S'.
PECounterASWeight=Each weight in the additive-symbols descriptor must be smaller than the previous weight.
PEClassSelEOF=t\u00ean l\u1edbp
PEClassSelNotIdent=C\u1ea7n \u0111\u1ecbnh danh cho l\u1edbp selector nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PECoordinatePair=Expected coordinate pair but found '%1$S'.
PETypeSelEOF=lo\u1ea1i th\u00e0nh ph\u1ea7n
PETypeSelNotType=C\u1ea7n t\u00ean th\u00e0nh ph\u1ea7n ho\u1eb7c '*' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEUnknownNamespacePrefix=Kh\u00f4ng r\u00f5 ti\u1ec1n t\u1ed1 namespace '%1$S'.
PEAttributeNameEOF=t\u00ean thu\u1ed9c t\u00ednh
PEAttributeNameExpected=C\u1ea7n \u0111\u1ecbnh danh cho t\u00ean thu\u1ed9c t\u00ednh nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEAttributeNameOrNamespaceExpected=C\u1ea7n t\u00ean thu\u1ed9c t\u00ednh ho\u1eb7c namespace nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEAttSelNoBar=C\u1ea7n '|' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEAttSelInnerEOF=ph\u1ea7n c\u1ee7a thu\u1ed9c t\u00ednh selector
PEAttSelUnexpected=D\u1ea5u th\u1eeba trong thu\u1ed9c t\u00ednh selector\: '%1$S'.
PEAttSelValueEOF=gi\u00e1 tr\u1ecb thu\u1ed9c t\u00ednh
PEAttSelCloseEOF=']' \u0111\u1ec3 k\u1ebft th\u00fac thu\u1ed9c t\u00ednh selector
PEAttSelNoClose=C\u1ea7n ']' \u0111\u1ec3 k\u1ebft th\u00fac thu\u1ed9c t\u00ednh selector nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEAttSelBadValue=C\u1ea7n \u0111\u1ecbnh danh ho\u1eb7c chu\u1ed7i cho gi\u00e1 tr\u1ecb trong attribute selector nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEPseudoSelEOF=t\u00ean c\u1ee7a pseudo-class ho\u1eb7c pseudo-element
PEPseudoSelBadName=C\u1ea7n \u0111\u1ecbnh danh cho pseudo-class ho\u1eb7c pseudo-element nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEPseudoSelNonFunc=H\u00e0m token cho non-function pseudo-class ho\u1eb7c pseudo-element, ho\u1eb7c c\u00e1ch kh\u00e1c, khi \u0111\u1ecdc '%1$S'.
PEPseudoSelNotPE=C\u1ea7n pseudo-element nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEPseudoSelDoubleNot=Negation pseudo-class kh\u00f4ng th\u1ec3 \u00e2m '%1$S'.
PEPseudoSelPEInNot=Pseudo-elements kh\u00f4ng th\u1ec3 \u00e2m '%1$S'.
PEPseudoSelNewStyleOnly=Pseudo-element n\u00e0y ph\u1ea3i d\u00f9ng d\u1ea1ng "\:\:"\: '%1$S'.
PEPseudoSelEndOrUserActionPC=Expected end of selector or a user action pseudo-class after pseudo-element but found '%1$S'.
PEPseudoSelNoUserActionPC=Expected end of selector after pseudo-element that does not support user action pseudo-classes but found '%1$S'.
PEPseudoSelMultiplePE=Pseudo-element b\u1ed5 sung '%1$S'.
PEPseudoSelUnknown=Kh\u00f4ng r\u00f5 pseudo-class ho\u1eb7c pseudo-element '%1$S'.
PENegationEOF=selector trong negation
PENegationBadInner=Sai simple selector \u1edf negation pseudo-class argument '%1$S'.
PENegationNoClose=Thi\u1ebfu d\u1ea5u \u0111\u00f3ng ')' trong negation pseudo-class '%1$S'.
PENegationBadArg=Thi\u1ebfu tham s\u1ed1 trong negation pseudo-class '%1$S'.
PEPseudoClassArgEOF=tham chi\u1ebfu t\u1edbi pseudo-class selector
PEPseudoClassArgNotIdent=C\u1ea7n \u0111\u1ecbnh danh cho tham s\u1ed1 pseudo-class nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEPseudoClassArgNotNth=C\u1ea7n ph\u1ea7n tham chi\u1ebfu t\u1edbi pseudo-class nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEPseudoClassNoClose=Thi\u1ebfu ')' trong pseudo-class, thay v\u00e0o \u0111\u00f3 l\u1ea1i th\u1ea5y '%1$S'.
PEPseudoClassNoArg=Thi\u1ebfu tham chi\u1ebfu t\u1edbi pseudo-class '%1$S'.
PEPseudoClassNotUserAction=Expected end of selector or a user action pseudo-class after pseudo-element but found pseudo-class '%1$S'.
PESelectorEOF=selector
PEBadDeclBlockStart=C\u1ea7n '{' \u0111\u1ec3 b\u1eaft \u0111\u1ea7u kh\u1ed1i khai b\u00e1o nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEColorEOF=m\u00e0u
PEColorNotColor=C\u1ea7n m\u00e0u nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEColorComponentEOF=th\u00e0nh ph\u1ea7n m\u00e0u
PEExpectedPercent=C\u1ea7n ph\u1ea7n tr\u0103m nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEExpectedInt=C\u1ea7n m\u1ed9t s\u1ed1 nguy\u00ean nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEColorBadRGBContents=C\u1ea7n m\u1ed9t s\u1ed1 ho\u1eb7c ph\u1ea7n tr\u0103m trong rgb() nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEColorComponentBadTerm=C\u1ea7n '%2$S' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEColorHueEOF=s\u1eafc \u0111\u1ed9
PEExpectedComma=C\u1ea7n ',' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEColorSaturationEOF=\u0111\u1ed9 b\u00e3o h\u00f2a
PEColorLightnessEOF=\u0111\u1ed9 s\u00e1ng
PEColorOpacityEOF=\u0111\u1ed9 m\u1edd c\u1ee7a m\u00e0u
PEExpectedNumber=C\u1ea7n m\u1ed9t s\u1ed1 nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEPositionEOF=<position>
PEExpectedPosition=Expected <position> but found '%1$S'.
PEExpectedRadius=Expected radius but found '%1$S'.
PEExpectedCloseParen=C\u1ea7n ')' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEDeclEndEOF=';' ho\u1eb7c '}' \u0111\u1ec3 k\u1ebft th\u00fac khai b\u00e1o
PEParseDeclarationNoColon=C\u1ea7n '\:' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEParseDeclarationDeclExpected=C\u1ea7n khai b\u00e1o nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEEndOfDeclEOF=k\u1ebft th\u00fac khai b\u00e1o
PEImportantEOF=important
PEExpectedImportant=C\u1ea7n 'important' nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEBadDeclEnd=C\u1ea7n ';' \u0111\u1ec3 k\u1ebft th\u00fac khai b\u00e1o nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEBadDeclOrRuleEnd2=C\u1ea7n ';' ho\u1eb7c '}' \u0111\u1ec3 k\u1ebft th\u00fac khai b\u00e1o nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEInaccessibleProperty2=Kh\u00f4ng th\u1ec3 x\u00e1c \u0111\u1ecbnh gi\u00e1 tr\u1ecb cho thu\u1ed9c t\u00ednh n\u1ed9i t\u1ea1i.
PECommentEOF=k\u1ebft th\u00fac ch\u00fa th\u00edch
SEUnterminatedString=T\u00ecm th\u1ea5y chu\u1ed7i ch\u01b0a \u0111\u00f3ng '%1$S'.
PEFontDescExpected=Mong \u0111\u1ee3i k\u00ed hi\u1ec7u ph\u00f4ng nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEUnknownFontDesc=K\u00ed hi\u1ec7u '%1$S' ch\u01b0a bi\u1ebft trong lu\u1eadt @font-face.
PEMQExpectedExpressionStart=Y\u00eau c\u1ea7u '(' \u0111\u1ec3 kh\u1edfi ch\u1ea1y bi\u1ec3u th\u1ee9c truy v\u1ea5n \u0111a ph\u01b0\u01a1ng ti\u1ec7n nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEMQExpressionEOF=n\u1ed9i dung c\u1ee7a bi\u1ec3u th\u1ee9c truy v\u1ea5n \u0111a ph\u01b0\u01a1ng ti\u1ec7n
PEMQExpectedFeatureName=Y\u00eau c\u1ea7u t\u00ean ch\u1ee9c n\u0103ng \u0111a ph\u01b0\u01a1ng ti\u1ec7n nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEMQExpectedFeatureNameEnd=Y\u00eau c\u1ea7u '\:' ho\u1eb7c ')' sau t\u00ean ch\u1ee9c n\u0103ng \u0111a ph\u01b0\u01a1ng ti\u1ec7n nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEMQNoMinMaxWithoutValue=T\u00ednh n\u0103ng \u0111a ph\u01b0\u01a1ng ti\u1ec7n v\u1edbi min- ho\u1eb7c max- ph\u1ea3i c\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb.
PEMQExpectedFeatureValue=T\u00ecm th\u1ea5y gi\u00e1 tr\u1ecb b\u1ea5t h\u1ee3p l\u1ec7 \u0111\u1ed1i v\u1edbi t\u00ednh n\u0103ng \u0111a ph\u01b0\u01a1ng ti\u1ec7n.
PEBadFontBlockStart=Mong \u0111\u1ee3i '{' \u0111\u1ec3 b\u1eaft \u0111\u1ea7u quy t\u1eafc @font-face nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEBadFontBlockEnd=Mong \u0111\u1ee3i '}' \u0111\u1ec3 k\u1ebft th\u00fac quy t\u1eafc @font-face nh\u01b0ng l\u1ea1i th\u1ea5y '%1$S'.
PEAnonBoxNotAlone=Kh\u00f4ng mong mu\u1ed1n khung v\u00f4 danh.
PEFFVUnexpectedEOF=Unexpected end of @font-feature-values rule.
PEFFVBlockStart=Expected opening { of @font-feature-values rule but found '%1$S'.
PEFFVValueSetStart=Expected opening { of feature value set but found '%1$S'.
PEFFVNoFamily=Expected font family list for @font-feature-values rule but found '%1$S'.
PEFFVUnexpectedBlockEnd=Expected '}' to end @font-feature-values rule but found '%1$S'.
PEFFVUnknownFontVariantPropValue=Unknown font-variant property value '%1$S'.
PEFFVExpectedIdent=Expected identifier but found '%1$S'.
PEFFVExpectedValue=Expected non-negative integer value but found '%1$S'.
PEFFVTooManyValues=Too many values for feature type '%1$S'.
PEFFVGenericInFamilyList=Family list cannot contain generic font family name.
PEFFVValueDefinitionTrailing=Expected end of value definition but found '%1$S'.
PEBadDirValue=Mong \u0111\u1ee3i 'ltr' ho\u1eb7c 'rtl' trong vi\u1ec7c ch\u1ecdn \u0111i\u1ec1u h\u01b0\u1edbng nh\u01b0ng ch\u1ec9 th\u1ea5y '%1$S'.
PESupportsConditionStartEOF2='not', '(', or function
PESupportsConditionInParensEOF=')'
PESupportsConditionNotEOF='not'
PESupportsWhitespaceRequired=Expected whitespace after 'not', 'and', or 'or'.
PESupportsConditionExpectedOpenParenOrFunction=Expected '(' or function while parsing supports condition but found '%1$S'.
PESupportsConditionExpectedCloseParen=Mong \u0111\u1ee3i ')' khi \u0111ang ph\u00e2n ng\u1eef c\u00e1c \u0111i\u00eau ki\u1ec7n h\u1ed7 tr\u1ee3 nh\u01b0ng ch\u1ec9 th\u1ea5y '%1$S'.
PESupportsConditionExpectedStart2=Expected 'not', '(', or function while parsing supports condition but found '%1$S'.
PESupportsConditionExpectedNot=Mong \u0111\u1ee3i 'not' khi ph\u00e2n ng\u1eef \u0111i\u1ec1u ki\u1ec7n h\u1ed7 tr\u1ee3 nh\u01b0ng ch\u1ec9 th\u1ea5y '%1$S'.
PESupportsGroupRuleStart=Mong \u0111\u1ee3i '{' \u0111\u1ec3 b\u1eaft \u0111\u1ea7u quy \u0111\u1ecbnh @supports nh\u01b0ng ch\u1ec9 th\u1ea5y '%1$S'.
PEFilterEOF=b\u1ed9 l\u1ecdc
PEExpectedNoneOrURL=D\u1ef1 ki\u1ebfn l\u00e0 "kh\u00f4ng c\u00f3" ho\u1eb7c URL nh\u01b0ng l\u1ea1i t\u00ecm th\u1ea5y '%1$S'.
PEExpectedNoneOrURLOrFilterFunction=D\u1ef1 ki\u1ebfn l\u00e0 "kh\u00f4ng c\u00f3", URL ho\u1eb7c t\u00ednh n\u0103ng l\u1ecdc nh\u01b0ng l\u1ea1i t\u00ecm th\u1ea5y '%1$S'.
PEExpectedNonnegativeNP=D\u1ef1 ki\u1ebfn l\u00e0 con s\u1ed1 ho\u1eb7c ph\u1ea7n tr\u0103m kh\u00f4ng \u00e2m.
PEFilterFunctionArgumentsParsingError=L\u1ed7i khi ph\u00e2n t\u00edch c\u00e1c ti\u00eau ch\u00ed cho t\u00ednh n\u0103ng l\u1ecdc.
PEVariableEOF=variable
PEVariableEmpty=Expected variable value but found '%1$S'.
PEValueWithVariablesParsingError=Error in parsing value for '%1$S' after substituting variables.
PEValueWithVariablesFallbackInherit=Falling back to 'inherit'.
PEValueWithVariablesFallbackInitial=Falling back to 'initial'.
PEInvalidVariableReference=Property contained reference to invalid variable.
PEInvalidVariableTokenFallback=Found invalid token '%1$S' at top level of variable reference fallback.
PEExpectedVariableNameEOF=identifier for variable name
PEExpectedVariableName=Expected identifier for variable name but found '%1$S'.
PEExpectedVariableFallback=Expected variable reference fallback after ','.
PEExpectedVariableCommaOrCloseParen=Expected ',' or ')' after variable name in variable reference but found '%1$S'.

